<?xml version="1.0"?>
<launch>
<!-- define argument, use example: roslaunch .... bringup.launch sim:=true -->
	<arg name="sim" default="true"/>
 
<!-- simulation -->
<group if="$(arg sim)">
<!-- load the robot description file -->
	<param name="robot_description" command="$(find xacro)/xacro.py $(find youbot_description)/robots/youbot.urdf.xacro"/>

  	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
  	</node>

 <arg name="world" default="robocup_at_work_2012"/>
  <arg name="init_pos_x" default="0.0"/>
  <arg name="init_pos_y" default="0.0"/>
  <arg name="init_pos_z" default="0.0"/>

 <!-- launch world -->
  <include file="$(find youbot_gazebo_worlds)/launch/$(arg world).launch" />

<node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" respawn="false" output="screen"
    args="-param robot_description
          -urdf
          -x $(arg init_pos_x)
          -y $(arg init_pos_y)
          -z $(arg init_pos_z)
          -model youbot">
  </node>

  <!-- launch joint state controller -->
  <include file="$(find youbot_gazebo_control)/launch/joint_state_controller.launch" />


</group>

<!-- startup the youbot driver ros interface -->
<group unless="$(arg sim)">
    		<include file="$(find youbot_driver_ros_interface)/launch/youbot_driver.launch" />
</group>


<!-- startup the IK -->
 <!-- fake arm with rviz, load the robot description file -->
        <group if="$(arg sim)">
	<!-- start robot_state_publisher assuming /joint_states is the default topic -->
		<include file="$(find slaw_youbot_arm_navigation_utils)/launch/joint_trajectory_action.launch" />
    		<node pkg='slaw_youbot_arm_navigation_utils' type='youbot_arm_server.py' name='youbot_arm_server' output="screen" />

    		<rosparam file="$(find slaw_youbot_arm_navigation_utils)/config/joints_configuration.yaml" command="load" />
    		<node pkg='slaw_youbot_arm_navigation_utils' type='youbot_simple_ik_server.py' name='ik_service' output='screen' />

    		<node pkg='slaw_youbot_arm_navigation_utils' type='arm_mockup.py' name='arm_mockup' output='screen' />
	</group>

 <!-- slaw arm navigation -->
	<group unless="$(arg sim)">
		<include file="$(find slaw_youbot_arm_navigation)/launch/slaw_arm_navigation.launch" />
	</group>

<group>
 	<node pkg='rviz' type='rviz' name='rviz' args="" output='screen' />
</group>




</launch>
