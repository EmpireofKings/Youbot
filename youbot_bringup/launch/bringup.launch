<?xml version="1.0"?>
<launch>
<!-- define argument, use example: roslaunch .... bringup.launch sim:=true -->
	<arg name="sim" default="false"/>
	<arg name="gazebo" default="false"/>
	<arg name="mapping" default="false"/>
	<arg name="arm" default="false"/>
	<arg name="laser" default="false"/>
	<arg name="diagnostics" default="true"/>	

	<!-- teleop -->
	<arg name="teleop" default="false"/>
	<arg name="keyboard" default="true"/>
	<arg name="ps3" default="false"/>
	<arg name="arm_teleop" default="false"/>

	<!-- visual = start rviz -->
	<arg name="visual" default="false"/>
	<arg name="rvizconfig" default="$(find youbot_bringup)/rviz/urdf.rviz" />

<!-- load the robot description file -->
	<param name="robot_description" command="$(find xacro)/xacro.py $(find youbot_description)/robots/youbot.urdf.xacro" />

<!-- start publishers -->
<group if="$(arg sim)">
  	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
</group>

<!-- startup the youbot_driver_ros_interface, only when NOT in simulation -->
<group unless="$(arg sim)">
	<include file="$(find youbot_driver_ros_interface)/launch/youbot_driver.launch" />
</group>


<!-- youbot diagnostics (battery monitor) -->
<group if="$(arg diagnostics)">
	<node pkg="youbot_battery_monitor" type="youbot_battery_monitor" name="youbot_battery_monitor" respawn="true" output="screen" launch-prefix="" 
    args="/dev/youbot/lcddisplay wlan0 eth1" />
</group>

<!-- teleop -->
<group if="$(arg teleop)">
	<group if="$(arg keyboard)">
  		<node pkg="youbot_driver_ros_interface" type="youbot_keyboard_teleop.py" name="youbot_keyboard_teleop" output="screen" launch-prefix="xterm -e"  />		
	</group>
	<group if="$(arg ps3)">
  		<node pkg="" type="" name="youbot_ps3_teleop" />		
	</group>
	<group if="$(arg arm_teleop)">
  		<node pkg="youbot_driver_ros_interface" type="youbot_arm_test" name="youbot_arm_test" output="screen" launch-prefix="xterm -e"  />		
	</group>
</group>

<!-- simulation -->
<group if="$(arg gazebo)">
  	<arg name="world" default="robocup_at_work_2012"/>
  	<arg name="init_pos_x" default="0.0"/>
  	<arg name="init_pos_y" default="0.0"/>
  	<arg name="init_pos_z" default="0.0"/>

	<!-- launch world -->
         <include file="$(find youbot_gazebo_worlds)/launch/$(arg world).launch" />
  	<node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" respawn="false" output="screen"
    args="-param robot_description
          -urdf
          -x $(arg init_pos_x)
          -y $(arg init_pos_y)
          -z $(arg init_pos_z)
          -model youbot">
  	</node>

  	<!-- launch gazebo joint state controller -->
  	<include file="$(find youbot_gazebo_control)/launch/joint_state_controller.launch" />

  	<!-- launch arm and gripper controller -->
  	<include file="$(find youbot_gazebo_control)/launch/arm_controller.launch" />

</group>

<!-- startup the simple IK -->
<group if="$(arg arm)">
	<!--include file="$(find slaw_youbot_arm_navigation_utils)/launch/joint_trajectory_action.launch" /-->
    	<node pkg='slaw_youbot_arm_navigation_utils' type='youbot_arm_server.py' name='youbot_arm_server' output="screen" />

    	<rosparam file="$(find slaw_youbot_arm_navigation_utils)/config/joints_configuration.yaml" command="load" />
    	<node pkg='slaw_youbot_arm_navigation_utils' type='youbot_simple_ik_server.py' name='ik_service' output='screen' />
</group>

<!-- laser scanners -->
<group if="$(arg laser)">
  <node name="hokuyo_front" pkg="hokuyo_node" type="hokuyo_node" respawn="true" output="screen">
    <remap from="/scan" to="/scan_front"/>
    <!-- Starts up faster, but timestamps will be inaccurate. -->
    <param name="calibrate_time" type="bool" value="true"/>
    <!-- Set the port to connect to here -->
    <param name="port" type="string" value="/dev/sensors/hokuyo_H1100477"/>
    <param name="frame_id" type="string" value="hokuyo_front_link"/>
    <param name="min_ang" type="double" value="-2.35"/>
    <param name="max_ang" type="double" value="2.35"/>
    <param name="intensity" type="bool" value="false"/>
  </node>

  <node name="hokuyo_back" pkg="hokuyo_node" type="hokuyo_node" respawn="true" output="screen">
    <remap from="/scan" to="/scan_back"/>
    <!-- Starts up faster, but timestamps will be inaccurate. -->
    <param name="calibrate_time" type="bool" value="true"/>
    <!-- Set the port to connect to here -->
    <param name="port" type="string" value="/dev/sensors/hokuyo_H0904583"/>
    <param name="frame_id" type="string" value="hokuyo_back_link"/>
    <param name="min_ang" type="double" value="-2.35"/>
    <param name="max_ang" type="double" value="2.35"/>
    <param name="intensity" type="bool" value="false"/>
  </node>

  <!-- front laser -->
  <node pkg="tf" type="static_transform_publisher" name="hokuyo_front_broadcaster" args="0.25 -0.15 0.06 2.35619449019234 3.14 0 base_link hokuyo_front_link 100" />
  
  <!-- back laser -->
  <node pkg="tf" type="static_transform_publisher" name="hokuyo_back_broadcaster" args="-0.25 0.15 0.06 -0.785398163397448 3.14 0 base_link hokuyo_back_link 100" />

  <!-- combine laserscan topics -->
      <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
		<param name="destination_frame" value="/base_footprint"/>
		<param name="cloud_destination_topic" value="/merged_cloud"/>
		<param name="scan_destination_topic" value="/scan_multi"/>
                <param name="laserscan_topics" value =" /scan_front /scan_back " />
	</node>

</group>

<!-- mapping slam -->
<group if="$(arg mapping)">
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <remap from="/scan" to="scan_multi" />
    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="3.0"/>
    <param name="maxRange" value="5.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="srr" value="0.1"/>
    <param name="srt" value="0.2"/>
    <param name="str" value="0.1"/>
    <param name="stt" value="0.2"/>
    <param name="linearUpdate" value="1.0"/>
    <param name="angularUpdate" value="0.5"/>
    <param name="temporalUpdate" value="3.0"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="30"/>
    <param name="xmin" value="-5.0"/>
    <param name="ymin" value="-5.0"/>
    <param name="xmax" value="5.0"/>
    <param name="ymax" value="5.0"/>
    <param name="delta" value="0.025"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
  </node>
</group>

<!-- rviz visualisation -->
<group if="$(arg visual)">
	<node pkg='rviz' type='rviz' respawn='false' name='rviz' args="-d $(arg rvizconfig)" output='screen' />
</group>

</launch>
