<?xml version="1.0"?>
<launch>
<!-- define argument, use example: roslaunch .... bringup.launch sim:=true -->
	<arg name="sim" default="true"/>
	<arg name="arm" default="true"/>
	<arg name="laser" default="false"/>
	
	<!-- teleop -->
	<arg name="teleop" default="true"/>
	<arg name="keyboard" default="true"/>
	<arg name="ps3" default="false"/>
	<arg name="arm_teleop" default="false"/>

	<!-- visual = start rviz -->
	<arg name="visual" default="true"/>
	<arg name="rvizconfig" default="$(find youbot_bringup)/rviz/urdf.rviz" />

<!-- load the robot description file -->
	<param name="robot_description" command="$(find xacro)/xacro.py $(find youbot_description)/robots/youbot.urdf.xacro" />

<!-- start publishers -->
<group if="$(arg sim)">
  	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
</group>

<!-- startup the youbot_driver_ros_interface, only when NOT in simulation -->
<group unless="$(arg sim)">
	<include file="$(find youbot_driver_ros_interface)/launch/youbot_driver.launch" />
</group>

<!-- teleop -->
<group if="$(arg teleop)">
	<group if="$(arg keyboard)">
  		<node pkg="youbot_driver_ros_interface" type="youbot_keyboard_teleop.py" name="youbot_keyboard_teleop" output="screen" launch-prefix="xterm -e"  />		
	</group>
	<group if="$(arg ps3)">
  		<node pkg="" type="" name="youbot_ps3_teleop" />		
	</group>
	<group if="$(arg arm_teleop)">
  		<node pkg="youbot_driver_ros_interface" type="youbot_arm_test" name="youbot_arm_test" output="screen" launch-prefix="xterm -e"  />		
	</group>
</group>

<!-- simulation -->
<group if="$(arg sim)">
  	<arg name="world" default="robocup_at_work_2012"/>
  	<arg name="init_pos_x" default="0.0"/>
  	<arg name="init_pos_y" default="0.0"/>
  	<arg name="init_pos_z" default="0.0"/>

	<!-- launch world -->
 	 <include file="$(find youbot_gazebo_worlds)/launch/$(arg world).launch" />

  	<node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" respawn="false" output="screen"
    args="-param robot_description
          -urdf
          -x $(arg init_pos_x)
          -y $(arg init_pos_y)
          -z $(arg init_pos_z)
          -model youbot">
  	</node>

  	<!-- launch gazebo joint state controller -->
  	<include file="$(find youbot_gazebo_control)/launch/joint_state_controller.launch" />

  	<!-- launch arm and gripper controller -->
  	<include file="$(find youbot_gazebo_control)/launch/arm_controller.launch" />

</group>

<!-- startup the simple IK -->
<group if="$(arg arm)">
	<!--include file="$(find slaw_youbot_arm_navigation_utils)/launch/joint_trajectory_action.launch" /-->
    	<node pkg='slaw_youbot_arm_navigation_utils' type='youbot_arm_server.py' name='youbot_arm_server' output="screen" />

    	<rosparam file="$(find slaw_youbot_arm_navigation_utils)/config/joints_configuration.yaml" command="load" />
    	<node pkg='slaw_youbot_arm_navigation_utils' type='youbot_simple_ik_server.py' name='ik_service' output='screen' />
</group>

<!-- laser scanners -->
<group if="$(arg laser)">
 	<group unless="$(arg sim)">
   		<node name="hokuyo_front" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
  			<remap from="scan" to="scan_front" />
   			<param name="calibrate_time" type="bool" value="true"/> 
   			<param name="port" type="string" value="/dev/ttyACM0"/> 
   			<param name="intensity" type="bool" value="false"/>
   			<param name="min_ang" value="-2.356194437"/>   
   			<param name="max_ang" value="2.35619443"/>    
   			<param name="cluster" value="1"/>
   		</node>

   		<node name="hokuyo_back" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
   			<remap from="scan" to="scan_back" />
   			<param name="calibrate_time" type="bool" value="true"/> 
   			<param name="port" type="string" value="/dev/ttyACM1"/> 
   			<param name="intensity" type="bool" value="false"/>
   			<param name="min_ang" value="-2.356194437"/>   
   			<param name="max_ang" value="2.35619443"/>    
   			<param name="cluster" value="1"/>
   		</node>
  	</group>
</group>

<!-- rviz visualisation -->
<group if="$(arg visual)">
	<node pkg='rviz' type='rviz' respawn='true' name='rviz' args="-d $(arg rvizconfig)" output='screen' />
</group>

</launch>
